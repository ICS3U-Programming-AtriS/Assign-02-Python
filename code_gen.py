#!/usr/bin/env python3
# Created By: Atri Sarker
# Date: March 3, 2025
# This module holds the function for generating the code,
# given the parameters from the main file
from datetime import datetime
import math


# I will do this later
def get_prefix(side_amount: int):
    pass


def volume_formula(side_amount: int, type: str):
    # l represents base length
    # h represents height
    # n represents the side amount
    n = side_amount
    full_formula = ""
    base_formula = f"{n} * (1/4) * (l**2) * {math.tan((0.5 - 1/n)*math.pi)}"
    if type == "Prism":
        full_formula = f"({base_formula}) * h"
    elif type == "Pyramid":
        full_formula = f"({base_formula}) * (h/3)"

    return full_formula


def surface_area_formula(side_amount: int, type: str):
    # l represents base length
    # h represents height
    # n represents the side amount
    n = side_amount
    full_formula = ""
    base_formula = f"{n} * (1/4) * (l**2) * {math.tan((0.5 - 1/n)*math.pi)}"
    if type == "Prism":
        full_formula = f"2*({base_formula}) + (l*{n}*h)"
    elif type == "Pyramid":
        slant_formula = f"(h**2 + ( (l/2)*{(math.tan((0.5 - 1/n)*math.pi))} )**2)**0.5"
        full_formula = f"({base_formula}) + (l*{n}*({slant_formula})*0.5)"

    return full_formula


# Creates the code
def get_code(side_amount: int, type: str, unitType: str):
    # Get Date
    today = datetime.today()
    month = [
        "Jan",
        "Feb",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
    ][today.month - 1]
    # n represents the side amount
    n = side_amount
    res = f"""#!/usr/bin/env python3
# Generated by https://github.com/ICS3U-Programming-AtriS/Assign-02-Python
# Date: {month} {today.day}, {today.year}
# Calculator for the Volume and Surface Area of a
# Regular {n}-sided polygonal {type}

# function that makes sure input is a positive number
def valid_input(prompt:str):
  while True:
    try:
        print("\033[0m", end="") # WHITE TEXT
        res = float(input(prompt))
        if res >= 0:
            return res
        else:
            print("\033[0;31m", end="") # RED TEXT
            print("Value must be a positive number")
    except ValueError:
        print("\033[0;31m", end="") # RED TEXT
        print("Value must be a positive number")

def main():
    # Welcome Message
    print("\033[0;34m", end="") # BLUE TEXT
    print("This program calculates the Volume and Surface area")
    print("of a Regular {n}-sided polygonal {type}")
    # Input
    # Get side length (length of the base sides), l
    l = float(valid_input("Enter base length({unitType}): "))
    # Get height, h
    h = float(valid_input("Enter height({unitType}): "))

    # Process
    # Calculate the Volume
    volume = {volume_formula(n, type)}
    # Calculate the Surface Area
    surface_area = {surface_area_formula(n, type)}

    # Output
    print("\033[0;32m", end="") # GREEN TEXT
    print("The Volume is " + str(round(volume,2)) + "{unitType}\u00b3")
    print("The Surface Area is " + str(round(surface_area,2)) + "{unitType}\u00b2")

if __name__ == "__main__":
    main()

"""

    return res
